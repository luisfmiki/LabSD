|Datapath
clock => Reg_Motor:reg_M.CLK
clock => FlipFlopD:r0.clk
clock => FlipFlopD:r1.clk
clock => FlipFlopD:r2.clk
clock => FlipFlopD:regPorta.clk
clock => Contador:tempor.clk
a0_f => comb.IN0
a0_d => comb.IN1
a1_f => comb.IN0
a1_d => comb.IN1
a2_f => comb.IN0
a2_d => comb.IN1
r0_in => multiplexador:mux0.A
r1_in => multiplexador:mux1.A
r2_in => multiplexador:mux2.A
r_sel => multiplexador:mux0.S
r_sel => multiplexador:mux1.S
r_sel => multiplexador:mux2.S
porta => FlipFlopD:regPorta.D
load_m => Reg_Motor:reg_M.Load_M
f_cnt => Contador:tempor.cnt
led_in[0] => Bcd_7seg:BCD.entrada[0]
led_in[1] => Bcd_7seg:BCD.entrada[1]
led_in[2] => Bcd_7seg:BCD.entrada[2]
led_in[3] => Bcd_7seg:BCD.entrada[3]
motor[0] => Reg_Motor:reg_M.Min[0]
motor[1] => Reg_Motor:reg_M.Min[1]
r0_out <= FlipFlopD:r0.Q
r1_out <= FlipFlopD:r1.Q
r2_out <= FlipFlopD:r2.Q
f_T <= Contador:tempor.T
porta_out <= FlipFlopD:regPorta.Q
led_out[0] <= Bcd_7seg:BCD.saida[0]
led_out[1] <= Bcd_7seg:BCD.saida[1]
led_out[2] <= Bcd_7seg:BCD.saida[2]
led_out[3] <= Bcd_7seg:BCD.saida[3]
led_out[4] <= Bcd_7seg:BCD.saida[4]
led_out[5] <= Bcd_7seg:BCD.saida[5]
led_out[6] <= Bcd_7seg:BCD.saida[6]
m_out[0] <= Decodificador:decod.b[0]
m_out[1] <= Decodificador:decod.b[1]
m_out[2] <= Decodificador:decod.b[2]
m_out[3] <= Decodificador:decod.b[3]


|Datapath|Decodificador:decod
a[0] => b.IN0
a[0] => b.IN0
a[0] => b.IN0
a[0] => b.IN0
a[1] => b.IN1
a[1] => b.IN1
a[1] => b.IN1
a[1] => b.IN1
b[0] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[1] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[2] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[3] <= b.DB_MAX_OUTPUT_PORT_TYPE


|Datapath|multiplexador:mux0
A => F.IN0
R => F.IN0
S => F.IN1
S => F.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE


|Datapath|multiplexador:mux1
A => F.IN0
R => F.IN0
S => F.IN1
S => F.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE


|Datapath|multiplexador:mux2
A => F.IN0
R => F.IN0
S => F.IN1
S => F.IN1
F <= F.DB_MAX_OUTPUT_PORT_TYPE


|Datapath|Bcd_7seg:BCD
entrada[0] => Mux0.IN19
entrada[0] => Mux1.IN19
entrada[0] => Mux2.IN19
entrada[0] => Mux3.IN19
entrada[0] => Mux4.IN19
entrada[0] => Mux5.IN19
entrada[0] => Mux6.IN19
entrada[1] => Mux0.IN18
entrada[1] => Mux1.IN18
entrada[1] => Mux2.IN18
entrada[1] => Mux3.IN18
entrada[1] => Mux4.IN18
entrada[1] => Mux5.IN18
entrada[1] => Mux6.IN18
entrada[2] => Mux0.IN17
entrada[2] => Mux1.IN17
entrada[2] => Mux2.IN17
entrada[2] => Mux3.IN17
entrada[2] => Mux4.IN17
entrada[2] => Mux5.IN17
entrada[2] => Mux6.IN17
entrada[3] => Mux0.IN16
entrada[3] => Mux1.IN16
entrada[3] => Mux2.IN16
entrada[3] => Mux3.IN16
entrada[3] => Mux4.IN16
entrada[3] => Mux5.IN16
entrada[3] => Mux6.IN16
saida[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
saida[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
saida[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
saida[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
saida[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
saida[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
saida[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Datapath|Reg_Motor:reg_M
Min[0] => Mout[0]~reg0.DATAIN
Min[1] => Mout[1]~reg0.DATAIN
Mout[0] <= Mout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mout[1] <= Mout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Load_M => Mout[0]~reg0.ENA
Load_M => Mout[1]~reg0.ENA
CLK => Mout[0]~reg0.CLK
CLK => Mout[1]~reg0.CLK


|Datapath|FlipFlopD:r0
clk => Q~reg0.CLK
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => Q~reg0.ACLR


|Datapath|FlipFlopD:r1
clk => Q~reg0.CLK
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => Q~reg0.ACLR


|Datapath|FlipFlopD:r2
clk => Q~reg0.CLK
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => Q~reg0.ACLR


|Datapath|FlipFlopD:regPorta
clk => Q~reg0.CLK
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => Q~reg0.ACLR


|Datapath|Contador:tempor
clk => counter_up[0].CLK
clk => counter_up[1].CLK
clk => counter_up[2].CLK
cnt => counter_up.OUTPUTSELECT
cnt => counter_up.OUTPUTSELECT
cnt => counter_up.OUTPUTSELECT
T <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


